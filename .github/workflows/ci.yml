name: Cube Guardian ci workflow

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create config.yaml
        run: |
          echo "api_url: ${{ secrets.API_URL }}" > config.yaml
          echo "api_token: ${{ secrets.API_TOKEN }}" >> config.yaml
        shell: bash

      - name: Run tests
        run: |
          python cubeguardian.py
          # You can use the following options with cubeguardian.py:
          # --fail-fast: Enable fail-fast mode to stop testing further dimensions on the first failure.
          # --cubes <list of cube names>: Specify a list of cube names to test. If not set, all cubes will be tested.
          # --concurrency <number>: Set the concurrency limit for testing. Default is 10.

      - name: Check test results
        run: |
          if [[ "$TEST_RESULT" == *"failed"* ]]; then
            echo "One or more cubes are in defect. Workflow failed."
            exit 1
          else
            echo "All cubes passed. Workflow succeeded."
          fi
        env:
          TEST_RESULT: ${{ steps.build.outputs.stdout }}
